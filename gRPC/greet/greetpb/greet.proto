syntax = "proto3";

package greet;

option go_package="./greetpb";

// Unary example
message Greeting{
    string first_name=1;
    string last_name=2;
}

message GreetRequest{
    Greeting greeting=1;
}
message GreetResponse{
    string result=1;
}


// Stream example
message GreetingManyTimes{
    string first_name=1;
    string last_name=2;
}

message GreetRequestManyTimes{
    GreetingManyTimes greetingMT=1;
}
message GreetResponseManyTimes{
    string result=1;
}

//Client streaming
message GreetingCliStreaming{
    string stream_name=1;
}

message GreetRequestCliStreaming{
    GreetingCliStreaming greeting=1;
}
message GreetResponseCliStriaming{
    string result=1;
}

// Bi Directional Streaming
message GreetRequestBiDirect{
    Greeting greeting_bd=1;
}

message GreetResponseBiDirecrt{
    string result=1;
}

// Deadline
message GreetRequestDeadline{
    Greeting greeting_deadline=1;
}

message GreetResponseDeadline{
    string result=1;
}

service GreetService{
    //Unary req from client
    rpc Greet(GreetRequest) returns (GreetResponse){};
    //Stream server
    rpc GreetManyTimes(GreetRequestManyTimes) returns (stream GreetResponseManyTimes){};    
    //Client streaming
    rpc GreetLong(stream GreetRequestCliStreaming) returns (GreetResponseCliStriaming) {};
    //Bi Direct. streaming
    rpc GreetBiDirect(stream GreetRequestBiDirect) returns (stream GreetResponseBiDirecrt) {};

    // unary error handling
    // this RPC will throw an exeption if name =="Eric" 
    // Error code INVALID_ARGUMENT
    rpc GreetErr(GreetRequest) returns (GreetResponse){};
    
    //unary with deadline
    rpc GreetWithDeadline(GreetRequestDeadline) returns (GreetResponseDeadline){};
  
}




